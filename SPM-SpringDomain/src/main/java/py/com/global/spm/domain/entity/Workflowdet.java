package py.com.global.spm.domain.entity;

// Generated 15/07/2013 09:59:46 AM by Hibernate Tools 3.4.0.CR1

import com.fasterxml.jackson.annotation.JsonView;
import py.com.global.spm.domain.utils.ScopeViews;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * Workflowdet generated by hbm2java
 */
@Entity
@Table(name = "WORKFLOWDET" )
public class Workflowdet implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private WorkflowdetId id;
	private User user;
	private Workflow workflow;
	private Set<Approval> approvals = new HashSet<Approval>(0);
	private Integer step;

	public Workflowdet() {
	}

	public Workflowdet(WorkflowdetId id, User user, Workflow workflow) {
		this.id = id;
		this.user = user;
		this.workflow = workflow;
	}

	public Workflowdet(WorkflowdetId id, User user, Integer step, Workflow workflow,
			Set<Approval> approvals) {
		this.id = id;
		this.user = user;
		this.step = step;
		this.workflow = workflow;
		this.approvals = approvals;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "iduserPk", column = @Column(name = "IDUSER_PK", nullable = false, precision = 22, scale = 0)),
			@AttributeOverride(name = "idworkflowPk", column = @Column(name = "IDWORKFLOW_PK", nullable = false, precision = 22, scale = 0)) })
	@NotNull
	@JsonView({ScopeViews.NoBasics.class})
	public WorkflowdetId getId() {
		return this.id;
	}

	public void setId(WorkflowdetId id) {
		this.id = id;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDUSER_PK", nullable = false, insertable = false, updatable = false)
	@NotNull(message = "0037")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}
	@JsonView({ScopeViews.NoBasics.class})
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDWORKFLOW_PK", nullable = false, insertable = false, updatable = false)
	@NotNull(message = "0037")
	public Workflow getWorkflow() {
		return this.workflow;
	}

	public void setWorkflow(Workflow workflow) {
		this.workflow = workflow;
	}
	@JsonView({ScopeViews.NoBasics.class})
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workflowdet")
	public Set<Approval> getApprovals() {
		return this.approvals;
	}

	public void setApprovals(Set<Approval> approvals) {
		this.approvals = approvals;
	}

	@JsonView({ScopeViews.Basics.class})
	@Column(name = "STEP_NUM", precision = 2, scale = 0)
	@NotNull
	public Integer getStep() {
		return step;
	}

	public void setStep(Integer step) {
		this.step = step;
	}


	@Override
	public String toString() {
		final StringBuffer sb = new StringBuffer("Workflowdet{");
		sb.append("id=").append(id);
		sb.append(", idUser=").append(user.getIduserPk());
		sb.append(", idWorkflow=").append(workflow.getIdworkflowPk());
		sb.append(", approvals=").append(approvals);
		sb.append(", step=").append(step);
		sb.append('}');
		return sb.toString();
	}
}
