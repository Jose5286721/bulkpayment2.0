package py.com.global.spm.domain.entity;

// Generated 15/07/2013 09:59:46 AM by Hibernate Tools 3.4.0.CR1

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.fasterxml.jackson.annotation.JsonView;
import org.hibernate.validator.constraints.Length;
import javax.persistence.*;
import py.com.global.spm.domain.utils.ScopeViews;
import py.com.global.spm.domain.audit.EntityAuditEventListener;

import javax.validation.constraints.NotNull;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;


/**
 * Workflow generated by hbm2java
 */
@Entity
@Table(name = "WORKFLOW" )
@EntityListeners(EntityAuditEventListener.class)
public class Workflow implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@JsonView({ScopeViews.Basics.class})
	private Long idworkflowPk;
	@JsonView({ScopeViews.NoBasics.class})
	@JsonManagedReference
	private Company company;
	@JsonView({ScopeViews.Basics.class,ScopeViews.Details.class})
	private String workflownameChr;
    @JsonView({ScopeViews.Basics.class,ScopeViews.Details.class})
	private String descriptionChr;
    @JsonView({ScopeViews.Details.class})
	private String stateChr;
    @JsonView({ScopeViews.Details.class})
	private String walletChr;
    @JsonView({ScopeViews.NoBasics.class})
	@JsonBackReference
	private Set<Workflowdet> workflowdets = new HashSet<Workflowdet>(0);
    @JsonView({ScopeViews.NoBasics.class})
	@JsonBackReference
	private Set<Draft> drafts = new HashSet<Draft>(0);
    @JsonView({ScopeViews.NoBasics.class})
	@JsonBackReference
	private Set<Paymentorder> paymentorders = new HashSet<Paymentorder>(0);

	public Workflow() {
	}

	public Workflow(Long idworkflowPk, Company company,
			String workflownameChr, String stateChr) {
		this.idworkflowPk = idworkflowPk;
		this.company = company;
		this.workflownameChr = workflownameChr;
		this.stateChr = stateChr;
	}

	public Workflow(Long idworkflowPk, Company company,
			String workflownameChr, String descriptionChr, String stateChr,
			Set<Workflowdet> workflowdets, Set<Draft> drafts,
			Set<Paymentorder> paymentorders) {
		this.idworkflowPk = idworkflowPk;
		this.company = company;
		this.workflownameChr = workflownameChr;
		this.descriptionChr = descriptionChr;
		this.stateChr = stateChr;
		this.workflowdets = workflowdets;
		this.drafts = drafts;
		this.paymentorders = paymentorders;
	}

	@Id
	@Column(name = "IDWORKFLOW_PK", unique = true, nullable = false, precision = 22, scale = 0)
	@NotNull
	@SequenceGenerator(name="WORKFLOW_SEQ_GEN", sequenceName="WORKFLOW_SEQ", allocationSize=1)
	@GeneratedValue(generator="WORKFLOW_SEQ_GEN")
	public Long getIdworkflowPk() {
		return this.idworkflowPk;
	}

	public void setIdworkflowPk(Long idworkflowPk) {
		this.idworkflowPk = idworkflowPk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDCOMPANY_PK", nullable = false)
	@NotNull
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@Column(name = "WORKFLOWNAME_CHR", nullable = false, length = 30)
	@NotNull
	@Length(max = 30)
	public String getWorkflownameChr() {
		return this.workflownameChr;
	}

	public void setWorkflownameChr(String workflownameChr) {
		this.workflownameChr = workflownameChr;
	}

	@Column(name = "DESCRIPTION_CHR", length = 100)
	@Length(max = 100)
	public String getDescriptionChr() {
		return this.descriptionChr;
	}

	public void setDescriptionChr(String descriptionChr) {
		this.descriptionChr = descriptionChr;
	}

	@Column(name = "STATE_CHR", nullable = false, length = 2)
	public String getStateChr() {
		return this.stateChr;
	}

	public void setStateChr(String stateChr) {
		this.stateChr = stateChr;
	}

	@Column(name = "WALLET_CHR", length = 20)
	public String getWalletChr() {
		return walletChr;
	}

	public void setWalletChr(String walletChr) {
		this.walletChr = walletChr;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "workflow")
	@org.hibernate.annotations.OrderBy(clause = "step")
	public Set<Workflowdet> getWorkflowdets() {
		return this.workflowdets;
	}

	public void setWorkflowdets(Set<Workflowdet> workflowdets) {
		this.workflowdets = workflowdets;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workflow")
	public Set<Draft> getDrafts() {
		return this.drafts;
	}

	public void setDrafts(Set<Draft> drafts) {
		this.drafts = drafts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workflow")
	public Set<Paymentorder> getPaymentorders() {
		return this.paymentorders;
	}

	public void setPaymentorders(Set<Paymentorder> paymentorders) {
		this.paymentorders = paymentorders;
	}


	@Override
	public String toString() {
		return "Workflow{" +
				"idworkflowPk=" + idworkflowPk +
				", idCompany=" + company.getIdcompanyPk() +
				", workflownameChr='" + workflownameChr + '\'' +
				", descriptionChr='" + descriptionChr + '\'' +
				", stateChr=" + stateChr +
				", walletChr='" + walletChr + '\'' +
				'}';
	}
}
