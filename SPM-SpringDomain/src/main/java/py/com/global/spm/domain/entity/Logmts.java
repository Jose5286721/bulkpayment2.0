package py.com.global.spm.domain.entity;

// Generated 15/07/2013 09:59:46 AM by Hibernate Tools 3.4.0.CR1

import org.hibernate.validator.constraints.Length;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;


/**
 * Logmts generated by hbm2java
 */
@Entity
@Table(name = "LOGMTS")
public class Logmts implements Serializable{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long idlogmtsPk;
	private Paymentorderdetail paymentorderdetail;
	private Eventcode eventcode;
	private Company company;
	private Logpayment logpayment;
	private Date requestdateTim;
	private Date responsedateTim;
	private String requestChr;
	private String responseChr;
	private String methodChr;
	private String trxtypeChr;
	private BigDecimal amountNum;
	private String amountChr;
	private String stateChr;
	private String idtrxmtsChr;
	private Set<Logmtsrev> logmtsrevs = new HashSet<Logmtsrev>(0);
	private Long idParent;

	private Timestamp updatedateTim;
	private String idsessionmtsChr;

	private Long idprocessPk;
	private Long ideventcodeNum;

	@Column(name="IDSESSIONMTS_CHR", nullable=false, length=50)
	public String getIdsessionmtsChr() {
		return idsessionmtsChr;
	}

	public void setIdsessionmtsChr(String idsessionmtsChr) {
		this.idsessionmtsChr = idsessionmtsChr;
	}

	public Logmts(Long idlogmtsPk, Paymentorderdetail paymentorderdetail,
				  Eventcode eventcode, Company company, Logpayment logpayment,
				  Date requestdateTim, Date responsedateTim, String requestChr,
				  String responseChr, String methodChr, String trxtypeChr,
				  BigDecimal amountNum, String stateChr) {
		this.idlogmtsPk = idlogmtsPk;
		this.paymentorderdetail = paymentorderdetail;
		this.eventcode = eventcode;
		this.company = company;
		this.logpayment = logpayment;
		this.requestdateTim = requestdateTim;
		this.responsedateTim = responsedateTim;
		this.requestChr = requestChr;
		this.responseChr = responseChr;
		this.methodChr = methodChr;
		this.trxtypeChr = trxtypeChr;
		this.amountNum = amountNum;
		this.stateChr = stateChr;
	}

	public Logmts(Long idlogmtsPk, Paymentorderdetail paymentorderdetail, Eventcode eventcode,
				  Company company, Logpayment logpayment, Date requestdateTim, Date responsedateTim,
				  String requestChr, String responseChr, String methodChr, String trxtypeChr,
				  BigDecimal amountNum, String amountChr, String stateChr, String idtrxmtsChr,
				  Long idParent, Timestamp updatedateTim) {
		this.idlogmtsPk = idlogmtsPk;
		this.paymentorderdetail = paymentorderdetail;
		this.eventcode = eventcode;
		this.company = company;
		this.logpayment = logpayment;
		this.requestdateTim = requestdateTim;
		this.responsedateTim = responsedateTim;
		this.requestChr = requestChr;
		this.responseChr = responseChr;
		this.methodChr = methodChr;
		this.trxtypeChr = trxtypeChr;
		this.amountNum = amountNum;
		this.amountChr = amountChr;
		this.stateChr = stateChr;
		this.idtrxmtsChr = idtrxmtsChr;
		this.idParent = idParent;
		this.updatedateTim = updatedateTim;
	}

	@Id
	@SequenceGenerator(name="LOGMTS_IDLOGMTSPK_GENERATOR", sequenceName="LOGMTS_SEQ", allocationSize = 1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="LOGMTS_IDLOGMTSPK_GENERATOR")
	@Column(name = "IDLOGMTS_PK", unique = true, nullable = false, precision = 22, scale = 0)
	@NotNull
	public Long getIdlogmtsPk() {
		return this.idlogmtsPk;
	}

	public void setIdlogmtsPk(Long idlogmtsPk) {
		this.idlogmtsPk = idlogmtsPk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "IDPAYMENTORDER_PK", referencedColumnName = "IDPAYMENTORDER_PK", nullable = false),
			@JoinColumn(name = "IDBENEFICIARY_PK", referencedColumnName = "IDBENEFICIARY_PK", nullable = false) })
	@NotNull
	public Paymentorderdetail getPaymentorderdetail() {
		return this.paymentorderdetail;
	}

	public void setPaymentorderdetail(Paymentorderdetail paymentorderdetail) {
		this.paymentorderdetail = paymentorderdetail;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumns({
			@JoinColumn(name = "IDPROCESS_PK", referencedColumnName = "IDPROCESS_PK", nullable = false),
			@JoinColumn(name = "IDEVENTCODE_NUM", referencedColumnName = "IDEVENTCODE_NUM", nullable = false) })
	@NotNull
	public Eventcode getEventcode() {
		return this.eventcode;
	}

	public void setEventcode(Eventcode eventcode) {
		this.eventcode = eventcode;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDCOMPANY_PK", nullable = false)
	@NotNull
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDPAYMENT_NUM", nullable = false)
	@NotNull
	public Logpayment getLogpayment() {
		return this.logpayment;
	}

	public void setLogpayment(Logpayment logpayment) {
		this.logpayment = logpayment;
	}

	@Column(name = "REQUESTDATE_TIM", nullable = false)
	@NotNull
	public Date getRequestdateTim() {
		return this.requestdateTim;
	}

	public void setRequestdateTim(Date requestdateTim) {
		this.requestdateTim = requestdateTim;
	}

	@Column(name = "RESPONSEDATE_TIM", nullable = false)
	@NotNull
	public Date getResponsedateTim() {
		return this.responsedateTim;
	}

	public void setResponsedateTim(Date responsedateTim) {
		this.responsedateTim = responsedateTim;
	}

	@Column(name = "REQUEST_CHR", nullable = false, length = 400)
	@NotNull
	@Length(max = 400)
	public String getRequestChr() {
		return this.requestChr;
	}

	public void setRequestChr(String requestChr) {
		this.requestChr = requestChr;
	}

	@Column(name = "RESPONSE_CHR", nullable = false, length = 400)
	@NotNull
	@Length(max = 400)
	public String getResponseChr() {
		return this.responseChr;
	}

	public void setResponseChr(String responseChr) {
		this.responseChr = responseChr;
	}

	@Column(name = "METHOD_CHR", nullable = false, length = 40)
	@NotNull
	@Length(max = 40)
	public String getMethodChr() {
		return this.methodChr;
	}

	public void setMethodChr(String methodChr) {
		this.methodChr = methodChr;
	}

	@Column(name = "TRXTYPE_CHR", nullable = false, length = 1)
	public String getTrxtypeChr() {
		return this.trxtypeChr;
	}

	public void setTrxtypeChr(String trxtypeChr) {
		this.trxtypeChr = trxtypeChr;
	}

	@Column(name = "AMOUNT_CHR", nullable = false, length = 48)
	@NotNull
	public String getAmountChr() {
		return this.amountChr;
	}

	public void setAmountChr(String amountChr) {
		this.amountChr = amountChr;
	}

	@Transient
	public BigDecimal getAmountNum() {
		return new BigDecimal(this.amountChr);
	}

	public void setAmountNum(BigDecimal amountNum) {
		this.amountChr=amountNum.toPlainString();
	}

	@Column(name = "STATE_CHR", nullable = false, length = 2)
	public String getStateChr() {
		return this.stateChr;
	}

	public void setStateChr(String stateChr) {
		this.stateChr = stateChr;
	}

	@Column(name = "IDTRXMTS_CHR", length = 20)
	@Length(max = 20)
	public String getIdtrxmtsChr() {
		return this.idtrxmtsChr;
	}

	public void setIdtrxmtsChr(String idtrxmtsChr) {
		this.idtrxmtsChr = idtrxmtsChr;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "logmts")
	public Set<Logmtsrev> getLogmtsrevs() {
		return this.logmtsrevs;
	}

	public void setLogmtsrevs(Set<Logmtsrev> logmtsrevs) {
		this.logmtsrevs = logmtsrevs;
	}


	@Column(name = "UPDATEDATE_TIM", nullable = false)
	public Timestamp getUpdatedateTim() {
		return updatedateTim;
	}

	public void setUpdatedateTim(Timestamp updatedateTim) {
		this.updatedateTim = updatedateTim;
	}


	@Column(name = "IDLOGMTSRETRY_PK", precision = 22, scale = 0)
	public Long getIdParent() {
		return idParent;
	}

	public void setIdParent(Long idParent) {
		this.idParent = idParent;
	}

	@Column(name = "IDPROCESS_PK", insertable = false, updatable = false)
	public Long getIdprocessPk() {
		return idprocessPk;
	}

	public void setIdprocessPk(Long idprocessPk) {
		this.idprocessPk = idprocessPk;
	}

	@Column(name = "IDEVENTCODE_NUM", insertable = false, updatable = false)
	public Long getIdeventcodeNum() {
		return ideventcodeNum;
	}

	public void setIdeventcodeNum(Long ideventcodeNum) {
		this.ideventcodeNum = ideventcodeNum;
	}


	public Logmts() {
	}

	@Override
	public String toString() {
		final StringBuffer sb = new StringBuffer("Logmts{");
		sb.append("idlogmtsPk=").append(idlogmtsPk);
		sb.append(", idPaymentorderdetail=").append(paymentorderdetail.getId());
		sb.append(", idEventcode=").append(eventcode.getId());
		sb.append(", idCompany=").append(company.getIdcompanyPk());
		sb.append(", idLogpayment=").append(logpayment.getIdpaymentNum());
		sb.append(", requestdateTim=").append(requestdateTim);
		sb.append(", responsedateTim=").append(responsedateTim);
		sb.append(", requestChr='").append(requestChr).append('\'');
		sb.append(", responseChr='").append(responseChr).append('\'');
		sb.append(", methodChr='").append(methodChr).append('\'');
		sb.append(", trxtypeChr=").append(trxtypeChr);
		sb.append(", amountNum=").append(amountNum);
		sb.append(", amountChr='").append(amountChr).append('\'');
		sb.append(", stateChr=").append(stateChr);
		sb.append(", idtrxmtsChr='").append(idtrxmtsChr).append('\'');
		sb.append(", logmtsrevs=").append(logmtsrevs);
		sb.append(", idParent=").append(idParent);
		sb.append(", updatedateTim=").append(updatedateTim);
		sb.append(", idsessionmtsChr='").append(idsessionmtsChr).append('\'');
		sb.append('}');
		return sb.toString();
	}
}
