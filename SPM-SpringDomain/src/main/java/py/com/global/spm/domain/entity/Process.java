package py.com.global.spm.domain.entity;

// Generated 15/07/2013 09:59:46 AM by Hibernate Tools 3.4.0.CR1

import com.fasterxml.jackson.annotation.JsonView;
import org.hibernate.validator.constraints.Length;
import py.com.global.spm.domain.utils.ScopeViews;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;


/**
 * Process generated by hbm2java
 */
@Entity
@Table(name = "PROCESS" )
public class Process implements Serializable{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long idprocessPk;
	private String processnameChr;
	private String descriptionChr;
	private Set<Systemparameter> systemparameters = new HashSet<Systemparameter>(
			0);
	private Set<Processcontrol> processcontrols = new HashSet<Processcontrol>(0);
	private Set<Processperformance> processperformances = new HashSet<Processperformance>(
			0);
	private Set<Eventcode> eventcodes = new HashSet<Eventcode>(0);

	public Process() {
	}

	public Process(Long idprocessPk) {
		this.idprocessPk = idprocessPk;
	}

	public Process(Long idprocessPk, String processnameChr,
			String descriptionChr, Set<Systemparameter> systemparameters,
			Set<Processcontrol> processcontrols,
			Set<Processperformance> processperformances,
			Set<Eventcode> eventcodes) {
		this.idprocessPk = idprocessPk;
		this.processnameChr = processnameChr;
		this.descriptionChr = descriptionChr;
		this.systemparameters = systemparameters;
		this.processcontrols = processcontrols;
		this.processperformances = processperformances;
		this.eventcodes = eventcodes;
	}

	@Id
	@Column(name = "IDPROCESS_PK", unique = true, nullable = false, precision = 4, scale = 0)
	public Long getIdprocessPk() {
		return this.idprocessPk;
	}

	public void setIdprocessPk(Long idprocessPk) {
		this.idprocessPk = idprocessPk;
	}
	@JsonView({ScopeViews.Basics.class})
	@Column(name = "PROCESSNAME_CHR", nullable = false, length = 20)
	@NotNull
	@Length(max = 20)
	public String getProcessnameChr() {
		return this.processnameChr;
	}

	public void setProcessnameChr(String processnameChr) {
		this.processnameChr = processnameChr;
	}

	@JsonView({ScopeViews.Basics.class})
	@Column(name = "DESCRIPTION_CHR", length = 100)
	@Length(max = 100)
	public String getDescriptionChr() {
		return this.descriptionChr;
	}

	public void setDescriptionChr(String descriptionChr) {
		this.descriptionChr = descriptionChr;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "process")
	public Set<Systemparameter> getSystemparameters() {
		return this.systemparameters;
	}

	public void setSystemparameters(Set<Systemparameter> systemparameters) {
		this.systemparameters = systemparameters;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "process")
	public Set<Processcontrol> getProcesscontrols() {
		return this.processcontrols;
	}

	public void setProcesscontrols(Set<Processcontrol> processcontrols) {
		this.processcontrols = processcontrols;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "process")
	public Set<Processperformance> getProcessperformances() {
		return this.processperformances;
	}

	public void setProcessperformances(
			Set<Processperformance> processperformances) {
		this.processperformances = processperformances;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "process")
	public Set<Eventcode> getEventcodes() {
		return this.eventcodes;
	}

	public void setEventcodes(Set<Eventcode> eventcodes) {
		this.eventcodes = eventcodes;
	}


}
