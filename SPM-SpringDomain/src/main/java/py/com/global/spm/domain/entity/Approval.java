package py.com.global.spm.domain.entity;

import com.fasterxml.jackson.annotation.JsonView;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;
import py.com.global.spm.domain.utils.ScopeViews;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.io.Serializable;
import java.sql.Blob;
import java.util.Date;
import java.util.Objects;


/**
 * Approval generated by hbm2java
 */
@Entity
@Table(name = "APPROVAL" )
@EntityListeners(AuditingEntityListener.class)
public class Approval implements Serializable {

	private static final long serialVersionUID = 1L;

	@Id
	@NotNull
	@JsonView({ScopeViews.Basics.class})
	@SequenceGenerator(name = "APPROVAL_IDAPPROVALPK_GENERATOR", sequenceName = "APPROVAL_SEQ", initialValue = 1, allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "APPROVAL_IDAPPROVALPK_GENERATOR")
	@Column(name = "IDAPPROVAL_PK", unique = true, nullable = false, precision = 22, scale = 0)
	private Long idapprovalPk;

	@NotNull
	@JsonView({ScopeViews.NoBasics.class})
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "IDUSER_PK", referencedColumnName = "IDUSER_PK", nullable = false),
			@JoinColumn(name = "IDWORKFLOW_PK", referencedColumnName = "IDWORKFLOW_PK", nullable = false) })
	private Workflowdet workflowdet;

	@JsonView({ScopeViews.NoBasics.class})
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDCOMPANY_PK")
	private Company company;

	@NotNull
	@JsonView({ScopeViews.NoBasics.class})
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDPAYMENTORDER_PK", nullable = false)
	private Paymentorder paymentorder;

	@JsonView({ScopeViews.Basics.class})
	@Column(name = "SIGNATURE")
	private Blob signature;

	@JsonView({ScopeViews.Basics.class})
	@Column(name = "SMSSIGNED_NUM", precision = 1, scale = 0)
	private Boolean smssignedNum;

	@NotNull
	@JsonView({ScopeViews.Basics.class})
	@Column(name = "CREATIONDATE_TIM", nullable = false)
	private Date creationdateTim;

	@JsonView({ScopeViews.Basics.class})
	@Column(name = "SIGNED_NUM", nullable = false, precision = 1, scale = 0)
	private boolean signedNum;

	@JsonView({ScopeViews.Basics.class})
	@Column(name = "SIGNDATE_TIM")
	private Date signdateTim;

	@Column(name = "STEP_PK", nullable = false, precision = 2)
	private long stepPk;


	public Approval() {
	}

	public Approval(Long idapprovalPk, Workflowdet workflowdet,
			Paymentorder paymentorder, Date creationdateTim,
			boolean signedNum) {
		this.idapprovalPk = idapprovalPk;
		this.workflowdet = workflowdet;
		this.paymentorder = paymentorder;
		this.creationdateTim = creationdateTim;
		this.signedNum = signedNum;
	}

	public Approval(Long idapprovalPk, Workflowdet workflowdet, Company company,
					Paymentorder paymentorder, Blob signature, Boolean smssignedNum,
					Date creationdateTim, boolean signedNum, Date signdateTim, long stepPk) {
		this.idapprovalPk = idapprovalPk;
		this.workflowdet = workflowdet;
		this.company = company;
		this.paymentorder = paymentorder;
		this.signature = signature;
		this.smssignedNum = smssignedNum;
		this.creationdateTim = creationdateTim;
		this.signedNum = signedNum;
		this.signdateTim = signdateTim;
		this.stepPk = stepPk;
	}


	public Long getIdapprovalPk() {
		return this.idapprovalPk;
	}

	public void setIdapprovalPk(Long idapprovalPk) {
		this.idapprovalPk = idapprovalPk;
	}


	public Workflowdet getWorkflowdet() {
		return this.workflowdet;
	}

	public void setWorkflowdet(Workflowdet workflowdet) {
		this.workflowdet = workflowdet;
	}

	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	public Paymentorder getPaymentorder() {
		return this.paymentorder;
	}

	public void setPaymentorder(Paymentorder paymentorder) {
		this.paymentorder = paymentorder;
	}

	public Blob getSignature() {
		return this.signature;
	}

	public void setSignature(Blob signature) {
		this.signature = signature;
	}


	public Boolean getSmssignedNum() {
		return this.smssignedNum;
	}

	public void setSmssignedNum(Boolean smssignedNum) {
		this.smssignedNum = smssignedNum;
	}


	public Date getCreationdateTim() {
		return this.creationdateTim;
	}

	public void setCreationdateTim(Date creationdateTim) {
		this.creationdateTim = creationdateTim;
	}


	public boolean isSignedNum() {
		return this.signedNum;
	}

	public void setSignedNum(boolean signedNum) {
		this.signedNum = signedNum;
	}

	public Date getSigndateTim() {
		return this.signdateTim;
	}

	public void setSigndateTim(Date signdateTim) {
		this.signdateTim = signdateTim;
	}


	public long getStepPk() {
		return stepPk;
	}

	public void setStepPk(long stepPk) {
		this.stepPk = stepPk;
	}


	@Override
	public boolean equals(Object o) {
		if (this == o) return true;
		if (o == null || getClass() != o.getClass()) return false;
		Approval approval = (Approval) o;
		return Objects.equals(idapprovalPk, approval.idapprovalPk);
	}

	@Override
	public int hashCode() {

		return Objects.hash(idapprovalPk);
	}


	@Override
	public String toString() {
		final StringBuffer sb = new StringBuffer("Approval{");
		sb.append("idapprovalPk=").append(idapprovalPk);
		sb.append(", idWorkflowdet=").append(workflowdet.getId());
		sb.append(", idCompany=").append(company.getIdcompanyPk());
		sb.append(", idPaymentorder=").append(paymentorder.getIdpaymentorderPk());
		sb.append(", signature=").append(signature);
		sb.append(", smssignedNum=").append(smssignedNum);
		sb.append(", creationdateTim=").append(creationdateTim);
		sb.append(", signedNum=").append(signedNum);
		sb.append(", signdateTim=").append(signdateTim);
		sb.append(", stepPk=").append(stepPk);
		sb.append('}');
		return sb.toString();
	}
}
