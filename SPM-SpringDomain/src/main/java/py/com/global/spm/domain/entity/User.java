package py.com.global.spm.domain.entity;

// Generated 15/07/2013 09:59:46 AM by Hibernate Tools 3.4.0.CR1

import com.fasterxml.jackson.annotation.JsonView;
import org.hibernate.validator.constraints.Email;
import org.hibernate.validator.constraints.Length;
import py.com.global.spm.domain.utils.ScopeViews;
import py.com.global.spm.domain.audit.EntityAuditEventListener;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;


/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "USERS", uniqueConstraints = {
        @UniqueConstraint(columnNames = "EMAIL_CHR") })
@EntityListeners(EntityAuditEventListener.class)
public class User implements Serializable{

	private static final long serialVersionUID = 1L;
	private Long iduserPk;
	private List<Company> company;
	private boolean smssignNum;
	private String smspinChr;
	private String usernameChr;
	private String userlastnameChr;
	private String userjobtitleChr;
	private String passwordChr;
	private byte[] publickey;
	private String stateChr;
	private String emailChr;
	private String phonenumberChr;
	private Date creationdateTim;
	private Integer attemptNum;
	private boolean newUser;
	private Date passchangedateTim;
	private String codigoequipohumanoNum;
	private boolean notifysmsNum;
	private boolean notifyemailNum;
	private String recoveryhashChr;
	private Date generatehashTim;
	private String smspasswordChr;
	private boolean canviewcompanycreditNum;
	private String tokenChr;
	private Date tokenvalidateTim;
	private String tokenStateChr;
	private Integer tokenattemptNum;
	private Set<Workflowdet> workflowdets = new HashSet<Workflowdet>(0);
	private Set<Draft> drafts = new HashSet<Draft>(0);
	private Set<Logaudit> logaudits = new HashSet<Logaudit>(0);
	private Rol rols;
	private transient boolean selected = false;
	public User() {
	}

	public User(Long iduserPk, boolean smssignNum, String usernameChr,
				String userjobtitleChr, String passwordChr,
				String stateChr, Date creationdateTim, Integer attemptNum) {
		this.iduserPk = iduserPk;
		this.smssignNum = smssignNum;
		this.usernameChr = usernameChr;
		this.userlastnameChr = usernameChr;
		this.userjobtitleChr = userjobtitleChr;
		this.passwordChr = passwordChr;
		this.stateChr = stateChr;
		this.creationdateTim = creationdateTim;
		this.attemptNum = attemptNum;
	}

	public User(Long iduserPk, List<Company> company, boolean smssignNum,
				String smspinChr, String usernameChr, String userlastnameChr,
				String userjobtitleChr, String passwordChr, byte[] publickey,
				String stateChr, String emailChr, String phonenumberChr,
				Date creationdateTim, Integer attemptNum,
				String codigoequipohumanoNum, Set<Workflowdet> workflowdets,
				Set<Draft> drafts, Set<Logaudit> logaudits, Rol rols) {
		this.iduserPk = iduserPk;
		this.company = company;
		this.smssignNum = smssignNum;
		this.smspinChr = smspinChr;
		this.usernameChr = usernameChr;
		this.userlastnameChr = userlastnameChr;
		this.userjobtitleChr = userjobtitleChr;
		this.passwordChr = passwordChr;
		this.publickey = publickey;
		this.stateChr = stateChr;
		this.emailChr = emailChr;
		this.phonenumberChr = phonenumberChr;
		this.creationdateTim = creationdateTim;
		this.attemptNum = attemptNum;
		this.codigoequipohumanoNum = codigoequipohumanoNum;
		this.workflowdets = workflowdets;
		this.drafts = drafts;
		this.logaudits = logaudits;
		this.rols = rols;
	}

	@Id
	@Column(name = "IDUSER_PK", unique = true, nullable = false, precision = 22, scale = 0)
	@NotNull
	@JsonView({ScopeViews.Basics.class})
	@SequenceGenerator(name = "USER_SEQ_GEN", sequenceName = "USER_SEQ", allocationSize = 1)
	@GeneratedValue(generator = "USER_SEQ_GEN")
	public Long getIduserPk() {
		return this.iduserPk;
	}

	public void setIduserPk(Long iduserPk) {
		this.iduserPk = iduserPk;
	}

	@JsonView({ScopeViews.Basics.class})
	@ManyToMany(cascade = { CascadeType.ALL })
	@JoinTable(
			name = "USER_COMPANY",
			joinColumns = { @JoinColumn(name = "IDUSER_PK") },
			inverseJoinColumns = { @JoinColumn(name = "IDCOMPANY_PK") }
	)
	public List<Company> getCompany() {
		return this.company;
	}

	public void setCompany(List<Company> company) {
		this.company = company;
	}

	@JsonView({ScopeViews.Basics.class})
	@Column(name = "SMSSIGN_NUM", nullable = false, precision = 1, scale = 0)
	public boolean isSmssignNum() {
		return this.smssignNum;
	}

	public void setSmssignNum(boolean smssignNum) {
		this.smssignNum = smssignNum;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Column(name = "SMSPIN_CHR", length = 100)
	@Length(max = 100)
	public String getSmspinChr() {
		return this.smspinChr;
	}

	public void setSmspinChr(String smspinChr) {
		this.smspinChr = smspinChr;
	}

	@JsonView({ScopeViews.Basics.class})
	@Column(name = "USERLASTNAME_CHR", length = 30)
	@NotNull
	@Length(max = 30)
	public String getUserlastnameChr() {
		return this.userlastnameChr;
	}

	public void setUserlastnameChr(String userlastnameChr) {
		this.userlastnameChr = userlastnameChr;
	}

	@JsonView({ScopeViews.Basics.class})
	@Column(name = "USERJOBTITLE_CHR", length = 50)
	@NotNull
	@Length(max = 50)
	public String getUserjobtitleChr() {
		return this.userjobtitleChr;
	}

	public void setUserjobtitleChr(String userjobtitleChr) {
		this.userjobtitleChr = userjobtitleChr;
	}

	@JsonView({ScopeViews.Basics.class})
	@Column(name = "USERNAME_CHR", unique = true, nullable = false, length = 30)
	@NotNull
	@Length(max = 30)
	public String getUsernameChr() {
		return this.usernameChr;
	}

	public void setUsernameChr(String usernameChr) {
		this.usernameChr = usernameChr;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Column(name = "PASSWORD_CHR", nullable = false)
	@NotNull
	public String getPasswordChr() {
		return this.passwordChr;
	}

	public void setPasswordChr(String passwordChr) {
		this.passwordChr = passwordChr;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Column(name = "PUBLICKEY")
	public byte[] getPublickey() {
		return this.publickey;
	}

	public void setPublickey(byte[] publickey) {
		this.publickey = publickey;
	}

	@JsonView({ScopeViews.Basics.class})
	@Column(name = "STATE_CHR", nullable = false, length = 2)
	public String getStateChr() {
		return this.stateChr;
	}

	public void setStateChr(String stateChr) {
		this.stateChr = stateChr;
	}

	@JsonView({ScopeViews.Basics.class})
	@Column(name = "EMAIL_CHR", length = 100, unique = true)
	@Length(max = 100)
	@Email
	public String getEmailChr() {
		return this.emailChr;
	}

	public void setEmailChr(String emailChr) {
		this.emailChr = emailChr;
	}

	@JsonView({ScopeViews.Basics.class})
	@Column(name = "PHONENUMBER_CHR", length = 20)
	@Length(max = 20)
	public String getPhonenumberChr() {
		return this.phonenumberChr;
	}

	public void setPhonenumberChr(String phonenumberChr) {
		this.phonenumberChr = phonenumberChr;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Column(name = "CREATIONDATE_TIM", nullable = false)
	@NotNull
	public Date getCreationdateTim() {
		return this.creationdateTim;
	}

	public void setCreationdateTim(Date creationdateTim) {
		this.creationdateTim = creationdateTim;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Column(name = "ATTEMPT_NUM", nullable = false, precision = 1, scale = 0)
	public Integer getAttemptNum() {
		return this.attemptNum;
	}

	public void setAttemptNum(Integer attemptNum) {
		this.attemptNum = attemptNum;
	}

	@JsonView({ScopeViews.Basics.class})
	@Column(name = "CODIGOEQUIPOHUMANO_NUM", length = 50)
	public String getCodigoequipohumanoNum() {
		return this.codigoequipohumanoNum;
	}

	public void setCodigoequipohumanoNum(String codigoequipohumanoNum) {
		this.codigoequipohumanoNum = codigoequipohumanoNum;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Workflowdet> getWorkflowdets() {
		return this.workflowdets;
	}

	public void setWorkflowdets(Set<Workflowdet> workflowdets) {
		this.workflowdets = workflowdets;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Draft> getDrafts() {
		return this.drafts;
	}

	public void setDrafts(Set<Draft> drafts) {
		this.drafts = drafts;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Logaudit> getLogaudits() {
		return this.logaudits;
	}

	public void setLogaudits(Set<Logaudit> logaudits) {
		this.logaudits = logaudits;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@JoinColumn(name = "IDROL_PK")
	@OneToOne(cascade = CascadeType.ALL,fetch = FetchType.EAGER)
	public Rol getRols() {
		return this.rols;
	}

	public void setRols(Rol rols) {
		this.rols = rols;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Transient
	public boolean isSelected() {
		return selected;
	}

	public void setSelected(boolean selected) {
		this.selected = selected;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Column(name = "NOTIFYSMS_NUM", precision = 1, scale = 0)
	public boolean isNotifysmsNum() {
		return notifysmsNum;
	}

	public void setNotifysmsNum(boolean notifysmsNum) {
		this.notifysmsNum = notifysmsNum;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Column(name = "NOTIFYEMAIL_NUM", precision = 1, scale = 0)
	public boolean isNotifyemailNum() {
		return notifyemailNum;
	}

	public void setNotifyemailNum(boolean notifyemailNum) {
		this.notifyemailNum = notifyemailNum;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Column(name = "RECOVERYHASH_CHR", length = 300)
	public String getRecoveryhashChr() {
		return recoveryhashChr;
	}

	public void setRecoveryhashChr(String recoveryhashChr) {
		this.recoveryhashChr = recoveryhashChr;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Column(name = "SMSPASSWORD_CHR", length = 300)
	public String getSmspasswordChr() {
		return smspasswordChr;
	}

	public void setSmspasswordChr(String smspasswordChr) {
		this.smspasswordChr = smspasswordChr;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Column(name = "GENERATEHASH_TIM")
	public Date getGeneratehashTim() {
		return generatehashTim;
	}

	public void setGeneratehashTim(Date generatehashTim) {
		this.generatehashTim = generatehashTim;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Column(name = "NEWUSER_NUM", precision = 1, scale = 0)
	public boolean isNewUser() {
		return newUser;
	}

	public void setNewUser(boolean newUser) {
		this.newUser = newUser;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Column(name = "PASSCHANGEDATE_TIM", nullable = false)
	@NotNull
	public Date getPasschangedateTim() {
		return passchangedateTim;
	}

	public void setPasschangedateTim(Date passchangedateTim) {
		this.passchangedateTim = passchangedateTim;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Column(name = "CANVIEWCOMPANYCREDIT_NUM", precision = 1, scale = 0)
	public boolean isCanviewcompanycreditNum() {
		return canviewcompanycreditNum;
	}

	public void setCanviewcompanycreditNum(boolean canviewcompanycreditNum) {
		this.canviewcompanycreditNum = canviewcompanycreditNum;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Column(name = "TOKEN_CHR")
	public String getTokenChr() {
		return tokenChr;
	}

	public void setTokenChr(String tokenChr) {
		this.tokenChr = tokenChr;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Column(name = "TOKENVALIDATE_TIM")
	public Date getTokenvalidateTim() {
		return tokenvalidateTim;
	}

	public void setTokenvalidateTim(Date tokenvalidateTim) {
		this.tokenvalidateTim = tokenvalidateTim;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Column(name = "TOKENATTEMPT_NUM")
	public Integer getTokenattemptNum() {
		return tokenattemptNum;
	}

	public void setTokenattemptNum(Integer tokenattemptNum) {
		this.tokenattemptNum = tokenattemptNum;
	}

	@JsonView({ScopeViews.NoBasics.class})
	@Column(name = "TOKENSTATE_CHR")
	public String getTokenStateChr() {
		return tokenStateChr;
	}


	public void setTokenStateChr(String tokenStateChr) {
		this.tokenStateChr = tokenStateChr;
	}

	@Column(name = "ES_FIRMANTE")
	private Boolean esFirmante;

	public Boolean getEsFirmante() {
		return esFirmante;
	}

	public void setEsFirmante(Boolean esFirmante) {
		this.esFirmante = esFirmante;
	}

	@Override
	public String toString() {
		return "User [iduserPk=" + iduserPk + ", company=" + company
				+ ", usernameChr=" + usernameChr + ", userlastnameChr="
				+ userlastnameChr + ", emailChr=" + emailChr
				+ ", phonenumberChr=" + phonenumberChr + ", stateChr="
				+ stateChr + ", tokenChr=" + tokenChr + "]";
	}

}
