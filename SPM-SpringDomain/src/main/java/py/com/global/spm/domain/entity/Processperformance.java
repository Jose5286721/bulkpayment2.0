package py.com.global.spm.domain.entity;

// Generated 15/07/2013 09:59:46 AM by Hibernate Tools 3.4.0.CR1

import org.hibernate.validator.constraints.Length;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.io.Serializable;
import java.math.BigDecimal;

/**
 * Processperformance generated by hbm2java
 */
@Entity
@Table(name = "PROCESSPERFORMANCE" )
public class Processperformance implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private ProcessperformanceId id;
	private Process process;
	private Serializable creationdateTim;
	private Serializable changedateTime;
	private BigDecimal requestedNum;
	private BigDecimal respondedNum;
	private BigDecimal discardedNum;
	private BigDecimal expiredNum;
	private BigDecimal averageNum;
	private String descriptionChr;

	public Processperformance() {
	}

	public Processperformance(ProcessperformanceId id, Process process) {
		this.id = id;
		this.process = process;
	}

	public Processperformance(ProcessperformanceId id, Process process,
			Serializable creationdateTim, Serializable changedateTime,
			BigDecimal requestedNum, BigDecimal respondedNum,
			BigDecimal discardedNum, BigDecimal expiredNum,
			BigDecimal averageNum, String descriptionChr) {
		this.id = id;
		this.process = process;
		this.creationdateTim = creationdateTim;
		this.changedateTime = changedateTime;
		this.requestedNum = requestedNum;
		this.respondedNum = respondedNum;
		this.discardedNum = discardedNum;
		this.expiredNum = expiredNum;
		this.averageNum = averageNum;
		this.descriptionChr = descriptionChr;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "serverPk", column = @Column(name = "SERVER_PK", nullable = false, length = 30)),
			@AttributeOverride(name = "remotePk", column = @Column(name = "REMOTE_PK", nullable = false, length = 30)),
			@AttributeOverride(name = "idprocessPk", column = @Column(name = "IDPROCESS_PK", nullable = false, precision = 4, scale = 0)) })
	@NotNull
	public ProcessperformanceId getId() {
		return this.id;
	}

	public void setId(ProcessperformanceId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDPROCESS_PK", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Process getProcess() {
		return this.process;
	}

	public void setProcess(Process process) {
		this.process = process;
	}

	@Column(name = "CREATIONDATE_TIM")
	public Serializable getCreationdateTim() {
		return this.creationdateTim;
	}

	public void setCreationdateTim(Serializable creationdateTim) {
		this.creationdateTim = creationdateTim;
	}

	@Column(name = "CHANGEDATE_TIME")
	public Serializable getChangedateTime() {
		return this.changedateTime;
	}

	public void setChangedateTime(Serializable changedateTime) {
		this.changedateTime = changedateTime;
	}

	@Column(name = "REQUESTED_NUM", precision = 22, scale = 0)
	public BigDecimal getRequestedNum() {
		return this.requestedNum;
	}

	public void setRequestedNum(BigDecimal requestedNum) {
		this.requestedNum = requestedNum;
	}

	@Column(name = "RESPONDED_NUM", precision = 22, scale = 0)
	public BigDecimal getRespondedNum() {
		return this.respondedNum;
	}

	public void setRespondedNum(BigDecimal respondedNum) {
		this.respondedNum = respondedNum;
	}

	@Column(name = "DISCARDED_NUM", precision = 22, scale = 0)
	public BigDecimal getDiscardedNum() {
		return this.discardedNum;
	}

	public void setDiscardedNum(BigDecimal discardedNum) {
		this.discardedNum = discardedNum;
	}

	@Column(name = "EXPIRED_NUM", precision = 22, scale = 0)
	public BigDecimal getExpiredNum() {
		return this.expiredNum;
	}

	public void setExpiredNum(BigDecimal expiredNum) {
		this.expiredNum = expiredNum;
	}

	@Column(name = "AVERAGE_NUM", precision = 22, scale = 0)
	public BigDecimal getAverageNum() {
		return this.averageNum;
	}

	public void setAverageNum(BigDecimal averageNum) {
		this.averageNum = averageNum;
	}

	@Column(name = "DESCRIPTION_CHR", length = 20)
	@Length(max = 20)
	public String getDescriptionChr() {
		return this.descriptionChr;
	}

	public void setDescriptionChr(String descriptionChr) {
		this.descriptionChr = descriptionChr;
	}

}
