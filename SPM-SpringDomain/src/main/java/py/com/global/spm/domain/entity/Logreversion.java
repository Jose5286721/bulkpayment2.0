package py.com.global.spm.domain.entity;

//Generated 31/10/2013 12:39:59 PM by Hibernate Tools 3.4.0.CR1

import org.hibernate.validator.constraints.Length;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.io.Serializable;
import java.util.Date;


/**
* Logreversion generated by hbm2java
*/
@Entity
@Table(name = "LOGREVERSION")
public class Logreversion implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long idlogreversionPk;
	private Eventcode eventcode;
	private User users;
	private Long idUser;
	private Company company;
	private Date creationdateTim;
	private Long idpaymentorderPk;
	private String stateChr;
	private Long idProcess;
	private Long idEventCodeNum;

	public Logreversion() {
	}

	public Logreversion(Long idlogreversionPk, Eventcode eventcode,
			User users, Company company, Date creationdateTim,
			Long idpaymentorderPk, String stateChr) {
		this.idlogreversionPk = idlogreversionPk;
		this.eventcode = eventcode;
		this.users = users;
		this.company = company;
		this.creationdateTim = creationdateTim;
		this.idpaymentorderPk = idpaymentorderPk;
		this.stateChr = stateChr;
	}

	@Id
	@Column(name = "IDLOGREVERSION_PK", unique = true, nullable = false, precision = 13, scale = 0)
	public Long getIdlogreversionPk() {
		return this.idlogreversionPk;
	}

	public void setIdlogreversionPk(Long idlogreversionPk) {
		this.idlogreversionPk = idlogreversionPk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "IDPROCESS_PK", referencedColumnName = "IDPROCESS_PK", nullable = false, insertable = false,updatable = false),
			@JoinColumn(name = "IDEVENTCODE_NUM", referencedColumnName = "IDEVENTCODE_NUM", nullable = false, insertable = false, updatable = false) })
	@NotNull
	public Eventcode getEventcode() {
		return this.eventcode;
	}

	public void setEventcode(Eventcode eventcode) {
		this.eventcode = eventcode;
	}

	@Column(name = "IDEVENTCODE_NUM", nullable = false)
	public Long getIdEventCodeNum() {
		return idEventCodeNum;
	}

	public void setIdEventCodeNum(Long idEventCodeNum) {
		this.idEventCodeNum = idEventCodeNum;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDUSER_PK", nullable = false, insertable = false, updatable = false)
	@NotNull
	public User getUsers() {
		return this.users;
	}

	public void setUsers(User users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDCOMPANY_PK", nullable = false)
	@NotNull
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@Column(name = "CREATIONDATE_TIM", nullable = false)
	@NotNull
	public Date getCreationdateTim() {
		return this.creationdateTim;
	}

	public void setCreationdateTim(Date creationdateTim) {
		this.creationdateTim = creationdateTim;
	}

	@Column(name = "IDPAYMENTORDER_PK", nullable = false, precision = 13, scale = 0)
	public Long getIdpaymentorderPk() {
		return this.idpaymentorderPk;
	}

	public void setIdpaymentorderPk(Long idpaymentorderPk) {
		this.idpaymentorderPk = idpaymentorderPk;
	}

	@Column(name = "STATE_CHR", nullable = false, length = 2)
	@NotNull
	@Length(max = 2)
	public String getStateChr() {
		return this.stateChr;
	}

	public void setStateChr(String stateChr) {
		this.stateChr = stateChr;
	}

	@Column(name = "IDUSER_PK", nullable = false)
	public Long getIdUser() {
		return idUser;
	}

	public void setIdUser(Long idUser) {
		this.idUser = idUser;
	}
	@Column(name = "IDPROCESS_PK")
	public Long getIdProcess() {
		return idProcess;
	}

	public void setIdProcess(Long idProcess) {
		this.idProcess = idProcess;
	}

	@Override
	public String toString() {
		final StringBuffer sb = new StringBuffer("Logreversion{");
		sb.append("idlogreversionPk=").append(idlogreversionPk);
		sb.append(", idEventcode=").append(eventcode.getId());
		sb.append(", idUsers=").append(users.getIduserPk());
		sb.append(", idCompany=").append(company.getIdcompanyPk());
		sb.append(", creationdateTim=").append(creationdateTim);
		sb.append(", idpaymentorderPk=").append(idpaymentorderPk);
		sb.append(", stateChr='").append(stateChr).append('\'');
		sb.append('}');
		return sb.toString();
	}
}
