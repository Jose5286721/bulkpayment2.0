package py.com.global.spm.domain.entity;

//Generated 31/10/2013 12:39:59 PM by Hibernate Tools 3.4.0.CR1

import org.hibernate.validator.constraints.Length;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.io.Serializable;
import java.util.Date;


/**
* Smslogmessage generated by hbm2java
*/
@Entity
@Table(name = "SMSLOGMESSAGE")
public class Smslogmessage implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long idmessagePk;
	private Eventcode eventcode;
	private User user;
	private Company company;
	private Paymentorder paymentorder;
	private Date creationdateTim;
	private Date changedateTim;
	private String destinynumberChr;
	private String sourcenumberChr;
	private String messageChr;
	private String stateChr;
	private String typeChr;
	private Long idexternalmessageNum;

	public Smslogmessage() {
	}

	public Smslogmessage(Long idmessagePk, Eventcode eventcode,
			Date creationdateTim, Date changedateTim,
			String destinynumberChr, String sourcenumberChr, String stateChr,
			String typeChr) {
		this.idmessagePk = idmessagePk;
		this.eventcode = eventcode;
		this.creationdateTim = creationdateTim;
		this.changedateTim = changedateTim;
		this.destinynumberChr = destinynumberChr;
		this.sourcenumberChr = sourcenumberChr;
		this.stateChr = stateChr;
		this.typeChr = typeChr;
	}

	public Smslogmessage(Long idmessagePk, Eventcode eventcode,
			User user, Company company, Paymentorder paymentorder,
			Date creationdateTim, Date changedateTim,
			String destinynumberChr, String sourcenumberChr, String messageChr, String stateChr, String typeChr, Long idexternalmessageNum) {
		this.idmessagePk = idmessagePk;
		this.eventcode = eventcode;
		this.user = user;
		this.company = company;
		this.paymentorder = paymentorder;
		this.creationdateTim = creationdateTim;
		this.changedateTim = changedateTim;
		this.destinynumberChr = destinynumberChr;
		this.sourcenumberChr = sourcenumberChr;
		this.messageChr = messageChr;
		this.stateChr = stateChr;
		this.typeChr = typeChr;
		this.idexternalmessageNum = idexternalmessageNum;
	}

	@Id
	@Column(name = "IDMESSAGE_PK", unique = true, nullable = false, precision = 22, scale = 0)
	@NotNull
	public Long getIdmessagePk() {
		return this.idmessagePk;
	}

	public void setIdmessagePk(Long idmessagePk) {
		this.idmessagePk = idmessagePk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "IDPROCESS_PK", referencedColumnName = "IDPROCESS_PK", nullable = false),
			@JoinColumn(name = "IDEVENTCODE_NUM", referencedColumnName = "IDEVENTCODE_NUM", nullable = false) })
	@NotNull
	public Eventcode getEventcode() {
		return this.eventcode;
	}

	public void setEventcode(Eventcode eventcode) {
		this.eventcode = eventcode;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDUSER_PK")
	public User getUsers() {
		return this.user;
	}

	public void setUsers(User user) {
		this.user = user;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDCOMPANY_PK")
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDPAYMENTORDER_PK")
	public Paymentorder getPaymentorder() {
		return this.paymentorder;
	}

	public void setPaymentorder(Paymentorder paymentorder) {
		this.paymentorder = paymentorder;
	}

	@Column(name = "CREATIONDATE_TIM", nullable = false)
	@NotNull
	public Date getCreationdateTim() {
		return this.creationdateTim;
	}

	public void setCreationdateTim(Date creationdateTim) {
		this.creationdateTim = creationdateTim;
	}

	@Column(name = "CHANGEDATE_TIM", nullable = false)
	@NotNull
	public Date getChangedateTim() {
		return this.changedateTim;
	}

	public void setChangedateTim(Date changedateTim) {
		this.changedateTim = changedateTim;
	}

	@Column(name = "DESTINYNUMBER_CHR", nullable = false, length = 20)
	@NotNull
	@Length(max = 20)
	public String getDestinynumberChr() {
		return this.destinynumberChr;
	}

	public void setDestinynumberChr(String destinynumberChr) {
		this.destinynumberChr = destinynumberChr;
	}

	@Column(name = "SOURCENUMBER_CHR", nullable = false, length = 20)
	@NotNull
	@Length(max = 20)
	public String getSourcenumberChr() {
		return this.sourcenumberChr;
	}

	public void setSourcenumberChr(String sourcenumberChr) {
		this.sourcenumberChr = sourcenumberChr;
	}

	@Column(name = "MESSAGE_CHR", length = 300)
	@Length(max = 300)
	public String getMessageChr() {
		return this.messageChr;
	}

	public void setMessageChr(String messageChr) {
		this.messageChr = messageChr;
	}

	@Column(name = "STATE_CHR", nullable = false, length = 2)
	public String getStateChr() {
		return this.stateChr;
	}

	public void setStateChr(String stateChr) {
		this.stateChr = stateChr;
	}

	@Column(name = "TYPE_CHR", nullable = false, length = 10)
	@NotNull
	@Length(max = 10)
	public String getTypeChr() {
		return this.typeChr;
	}

	public void setTypeChr(String typeChr) {
		this.typeChr = typeChr;
	}

	@Column(name = "IDEXTERNALMESSAGE_NUM", precision = 22, scale = 0)
	public Long getIdexternalmessageNum() {
		return this.idexternalmessageNum;
	}

	public void setIdexternalmessageNum(Long idexternalmessageNum) {
		this.idexternalmessageNum = idexternalmessageNum;
	}

	@Override
	public String toString() {
		final StringBuffer sb = new StringBuffer("Smslogmessage{");
		sb.append("idmessagePk=").append(idmessagePk);
		sb.append(", idEventcode=").append(eventcode.getId());
		sb.append(", idUser=").append(user.getIduserPk());
		sb.append(", idCompany=").append(company.getIdcompanyPk());
		sb.append(", idPaymentorder=").append(paymentorder.getIdpaymentorderPk());
		sb.append(", creationdateTim=").append(creationdateTim);
		sb.append(", changedateTim=").append(changedateTim);
		sb.append(", destinynumberChr='").append(destinynumberChr).append('\'');
		sb.append(", sourcenumberChr='").append(sourcenumberChr).append('\'');
		sb.append(", messageChr='").append(messageChr).append('\'');
		sb.append(", stateChr=").append(stateChr);
		sb.append(", typeChr='").append(typeChr).append('\'');
		sb.append(", idexternalmessageNum=").append(idexternalmessageNum);
		sb.append('}');
		return sb.toString();
	}
}

